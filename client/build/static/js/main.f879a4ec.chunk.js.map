{"version":3,"sources":["firebase.js","contexts/AuthContext.js","contexts/HttpRequestContext.js","components/Signup/Signup.js","components/PrivateRoute/PrivateRoute.js","components/Chat/Chat.js","components/Chat/UserHeader/UserHeader.js","components/Chat/LeftPanel/LeftPanel.js","components/Chat/MiddlePanel/MiddlePanel.js","components/Chat/RightClickFriend/RightClickFriend.js","components/Chat/RightClickRoom/RightClickRoom.js","components/Login/Login.js","components/ForgotPassword/ForgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","displayName","a","createUserWithEmailAndPassword","then","result","user","updateProfile","axios","post","uid","user_name","signInWithEmailAndPassword","console","log","useEffect","onAuthStateChanged","value","IsUserNameAvailable","Promise","resolve","reject","get","res","catch","signup","login","logout","signOut","e","resetPassword","sendPasswordResetEmail","Provider","HttpRequestContext","useRequest","RequestProvider","postNewUser","userName","userCredential","err","acceptRequest","to","from_uid","to_uid","data","postNewRoomFromUser","roomName","topic","getRoomsWithUser","error","getRoomMessages","roomId","messages","postMessageToRoom","room","message","messageToSend","message_body","Error","getUserFromId","userId","deleteFriend","friendId","friendToRemove","friend_uid","deleteRoom","room_id","headers","addFriend","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","userNameRef","setError","history","useHistory","preventDefault","current","name","push","finally","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","PrivateRoute","Component","component","rest","render","props","socket","UserHeader","this","handleLogout","Row","Col","md","onClick","LeftPanel","handleTabChange","friendsList","handleRightClickFriend","handleRightClickRoom","handleRemoveFriend","handleAcceptPending","rooms","handleSwitchRoom","handleShow","tab","xs","Tabs","onSelect","Tab","eventKey","title","ListGroup","friends","map","friend","Item","action","onContextMenu","status","received","sent","_id","MiddlePanel","handleSubmit","formRef","messageRef","debug","index","ListGroupItem","header","RightClickFriend","xPos","yPos","handleMouseLeave","handleInviteToRoom","setShowRoomToolTip","renderInviteToolTip","showRoomToolTip","top","left","position","zIndex","paddingRight","onMouseLeave","onMouseOver","onMouseOut","OverlayTrigger","placement","delay","show","hide","overlay","RightClickRoom","handleEditRoom","handleRemoveRoom","Chat","setShow","handleClose","setTab","setRooms","accepted","setFriends","setMessages","setRoom","modalRef","setXPos","setYPos","showFriendOptions","setShowFriendOptions","showRoomOptions","setShowRoomOptions","currentFriend","setCurrentFriend","currentRoom","setCurrentRoom","updateFriends","acceptedFriends","filter","sentRequest","recievedRequest","handleReset","reset","emit","callback","createdRoom","mounted","io","off","on","messageBody","prevMessages","removedId","fluid","disconnect","pageX","pageY","r","find","lg","owner","users","u","Popover","Content","newList","Modal","onHide","Header","closeButton","Title","recipientUid","Footer","Login","ForgotPassword","setMessage","App","path","exact","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.f879a4ec.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n})\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    let IsUserNameAvailable = function(displayName) {\r\n        return new Promise(function(resolve, reject) {\r\n            axios.get(`${process.env.REACT_APP_MONGO_DB_PORT}/users/${displayName}/exists`)\r\n            .then(res  =>{\r\n                console.log('user name is not available.')\r\n                reject()\r\n            })\r\n            .catch(res => {\r\n                resolve(displayName);\r\n            })\r\n        })\r\n    }\r\n\r\n    async function signup(email, password, displayName) {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n                result.user.updateProfile({\r\n                    displayName: displayName\r\n                })\r\n                    .then(() => {\r\n                        setCurrentUser({ displayName: displayName })\r\n                    })\r\n                    .then(() => {\r\n                        axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/users/`, {\r\n                            email: result.user.email,\r\n                            uid: result.user.uid,\r\n                            user_name: result.user.displayName\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    useEffect(() => { //need this for forcing update on currentUser\r\n\r\n        console.log('current user changed')\r\n\r\n    }, [currentUser])\r\n\r\n    async function login(email, password) {\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // async function logout() {\r\n    //     await auth.signOut();\r\n    // }\r\n\r\n    let logout = function(){\r\n        return new Promise(function(resolve, reject) {\r\n            auth.signOut()\r\n            .then(() => {\r\n                resolve('user signed out');\r\n            })\r\n            .catch(e => {\r\n                reject(e);\r\n            })\r\n        })\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n        return unsubscribe;\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        IsUserNameAvailable,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n\r\n    )\r\n}","import React, { useContext, useEffect, useState} from 'react';\r\nimport { useAuth , AuthProvider} from './AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst HttpRequestContext = React.createContext();\r\n\r\n\r\nexport function useRequest(){\r\n    return useContext(HttpRequestContext);\r\n}\r\n\r\nexport function RequestProvider({children}) {\r\n\r\nconst { currentUser, signup} = useAuth();\r\n\r\n    function postNewUser(email, password, userName){\r\n\r\n        signup(email, password, userName)\r\n        .then((userCredential) => {\r\n            var user = userCredential.user;\r\n            console.log(user)\r\n            .then(res => {\r\n                console.log(res)\r\n                return res;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                return err;\r\n            });\r\n        })\r\n        .catch(err => {\r\n            return err;\r\n        })\r\n\r\n    }\r\n\r\n    let acceptRequest = function(to)\r\n    {\r\n        return new Promise(function(resolve, reject){\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/users/accept-friend`, {\r\n                from_uid: currentUser.uid,\r\n                to_uid: to,\r\n            })\r\n            .then(res => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    let getUserFromId = function(userId){\r\n        return new Promise(function(resolve, reject){\r\n\r\n            axios.get(`${process.env.REACT_APP_MONGO_DB_PORT}/users/${currentUser.uid}`)\r\n            .then(res => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    let postNewRoomFromUser = function(roomName)\r\n    {\r\n        return new Promise(function(resolve, reject){\r\n\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/rooms/${currentUser.uid}`, {topic: roomName})\r\n            .then(res => {\r\n                resolve(res);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n    \r\n    let addFriend = function(userName)\r\n    {\r\n        return new Promise(function(resolve, reject){\r\n\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/users/${currentUser.uid}/add-friend`, {\r\n                user_name: userName,\r\n            })\r\n            .then(res => {\r\n                resolve(res)\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    let getRoomsWithUser = new Promise(function(resolve, reject){\r\n\r\n        if(currentUser !== null)\r\n        {\r\n            axios.get(`${process.env.REACT_APP_MONGO_DB_PORT}/users/rooms/${currentUser.uid}`)\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n        } else {\r\n            reject('user not logged in')\r\n        }\r\n    }).catch(error => { //ust catch rejections\r\n        console.log(error);\r\n    })\r\n\r\n    let getRoomMessages = function(roomId){\r\n        \r\n        return new Promise(function(resolve, reject){\r\n\r\n            axios.get(`${process.env.REACT_APP_MONGO_DB_PORT}/rooms/${roomId}`)\r\n                .then(res => {\r\n                    resolve(res.data.messages)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        })\r\n    }\r\n\r\n    let postMessageToRoom = function(room, message) {\r\n\r\n            const messageToSend = {\r\n                uid: currentUser.uid,\r\n                message_body: message,\r\n            }\r\n\r\n        return new Promise(function(resolve, reject){\r\n\r\n            if(message === null)\r\n            reject(Error('message is undefined'));\r\n\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/rooms/${room}/messages`, messageToSend)\r\n            .then(res => {\r\n                resolve(res.data.result);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    let deleteFriend = function(friendId)\r\n    {\r\n        const friendToRemove = {\r\n            friend_uid: friendId,\r\n        }\r\n\r\n        return new Promise(function(resolve, reject){\r\n\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/users/${currentUser.uid}/friends`, friendToRemove)\r\n            .then(res => {\r\n                resolve(res);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    let deleteRoom = function(room_id)\r\n    {\r\n        return new Promise(function(resolve, reject){\r\n\r\n            const headers = {\r\n                'Content-Type': 'text/plain'\r\n            }\r\n\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/rooms/${room_id}/remove`, {headers})\r\n            .then(res => {\r\n                resolve(res);\r\n            })\r\n            .catch(err => {\r\n                reject(err);\r\n            });\r\n        })\r\n    }\r\n\r\n    const value = {\r\n        postNewUser,\r\n        acceptRequest,\r\n        postNewRoomFromUser,\r\n        getRoomsWithUser,\r\n        getRoomMessages,\r\n        postMessageToRoom,\r\n        getUserFromId,\r\n        deleteFriend,\r\n        deleteRoom,\r\n        addFriend,\r\n    }\r\n\r\n    return (\r\n        <HttpRequestContext.Provider value ={value}>\r\n            {children}\r\n        </HttpRequestContext.Provider>\r\n\r\n    )\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useAuth, AuthProvider} from '../../contexts/AuthContext';\r\nimport {useRequest, RequestProvider} from '../../contexts/HttpRequestContext'\r\nimport axios from 'axios';\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const userNameRef = useRef();\r\n    const {currentUser, signup, IsUserNameAvailable} = useAuth();\r\n    const {postNewUser} = useRequest();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n\r\n        if (passwordRef.current.value !==\r\n            passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n        }\r\n\r\n            setError(\"\");\r\n            setLoading(true);\r\n            IsUserNameAvailable(userNameRef.current.value)\r\n            .then(name => {\r\n                signup(emailRef.current.value, passwordRef.current.value, name)\r\n                    .then(() => {\r\n                        return (history.push(\"/\"));\r\n                    })\r\n            })\r\n            .catch(() => {\r\n                return(setError('error creating account'));\r\n            })\r\n            .finally(() => {\r\n                return (setLoading(false))\r\n            })\r\n        }\r\n\r\n    useEffect(() =>{\r\n\r\n    }, [loading])\r\n\r\n    return (\r\n        <AuthProvider>\r\n\r\n        <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{maxWidth: '400px'}}>\r\n\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\"> Sign Up</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"user-name\">\r\n                        <Form.Label>User Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={userNameRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center my-2\">\r\n            already have an account? <Link to=\"login\">Login</Link>\r\n        </div>\r\n            </div>\r\n        </Container>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport {useCookies} from 'react-cookie';\r\n\r\nexport default function PrivateRoute( {component: Component, ...rest}\r\n    ) {\r\n\r\n    const {currentUser} = useAuth();\r\n\r\n    return(\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}>\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport UserHeader from './UserHeader/UserHeader'\r\nimport LeftPanel from './LeftPanel/LeftPanel'\r\nimport MiddlePanel from './MiddlePanel/MiddlePanel'\r\nimport { PlusSquare, PersonLinesFill, HouseFill, ChatLeftTextFill } from 'react-bootstrap-icons';\r\nimport { useAuth, AuthProvider } from '../../contexts/AuthContext';\r\nimport { useRequest } from '../../contexts/HttpRequestContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport style from './style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {\r\n    ListGroup,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Modal,\r\n    Popover\r\n} from 'react-bootstrap'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client'\r\nimport RightClickFriend from './RightClickFriend/RightClickFriend';\r\nimport RightClickRoom from './RightClickRoom/RightClickRoom';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n    const { currentUser, logout } = useAuth();\r\n    const { \r\n        postNewRoomFromUser,\r\n        acceptRequest,\r\n        getRoomsWithUser,\r\n        getRoomMessages,\r\n        postMessageToRoom,\r\n        deleteFriend,\r\n        deleteRoom,\r\n        addFriend,\r\n    } = useRequest();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [error, setError] = useState(\"\"); // TODO: shoul use this more often\r\n    const history = useHistory();\r\n    const [tab, setTab] = useState('');\r\n    const [rooms, setRooms] = useState([]);\r\n    const [friendsList, setFriends] = useState({\r\n        accepted: [],\r\n        sent: [],\r\n        received: [],\r\n    });\r\n    const [messages, setMessages] = useState([]);\r\n    const [room, setRoom] = useState({});\r\n\r\n    const modalRef = useRef();\r\n    const formRef = useRef();\r\n    const messageRef = useRef();\r\n    const [xPos, setXPos] = useState('0px');\r\n    const [yPos, setYPos] = useState('0px');\r\n    const [showFriendOptions, setShowFriendOptions] = useState(false);\r\n    const [showRoomOptions, setShowRoomOptions] = useState(false);\r\n    const [currentFriend, setCurrentFriend] = useState();\r\n    const [currentRoom, setCurrentRoom] = useState();\r\n    const [showRoomToolTip, setShowRoomToolTip] = useState(false);\r\n\r\n    const handleTabChange = (tab) => {\r\n        setTab(tab);\r\n    }\r\n\r\n    function updateFriends()\r\n    {\r\n        axios.get(`${process.env.REACT_APP_MONGO_DB_PORT}/users/${currentUser.uid}`)\r\n            .then(res => {\r\n                    //TODO: I can filter the http response data, so I jsut have to make a pending attribute to \r\n                    // friendsList, called pending. the 'friends' coming in with status 0 are put into the pending list.\r\n\r\n                    // status\r\n                    // 0 - sent request to\r\n                    // 1 - recieved a request\r\n                    // 2 - friends\r\n\r\n                    let acceptedFriends = res.data.friends.filter(friend => friend.status === 2);\r\n                    let sentRequest = res.data.friends.filter(friend => friend.status === 0);\r\n                    let recievedRequest = res.data.friends.filter(friend => friend.status === 1);\r\n\r\n                    console.log('friends', friendsList);\r\n\r\n                    setFriends({ \r\n                        friends: acceptedFriends,\r\n                        sent: sentRequest,\r\n                        received: recievedRequest\r\n                    })\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n\r\n    function updateAllRooms() {\r\n        getRoomsWithUser\r\n            .then(data => {\r\n                if (data)\r\n                    setRooms([...data.result]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => { // getting all rooms that the user is in\r\n        let mounted = true;\r\n\r\n        if (mounted) {\r\n            updateAllRooms();\r\n        }\r\n        return () => mounted = false;\r\n\r\n    }, [show])\r\n\r\n    useEffect(() => { // getting all rooms that the user is in\r\n        let mounted = true;\r\n        //update friends //this is ugly...\r\n        if (mounted) {\r\n            updateFriends();\r\n        }\r\n\r\n        return () => mounted = false;\r\n\r\n    }, [tab])\r\n\r\n    function handleReset() {\r\n        formRef.current.reset(); //reset the value of the form stuff\r\n        // setMessage({});\r\n    }\r\n\r\n    async function handleSubmit(e) { //post a message to the room\r\n        e.preventDefault();\r\n\r\n        postMessageToRoom(room._id, messageRef.current.value)\r\n            .then(message => {\r\n                socket.emit('send-message', currentUser, room._id, message, ({ callback }) => {\r\n                    setMessages([...messages, message]);\r\n                });\r\n                handleReset();\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    async function handleAddRoom(e) { //TODO switch chat and change element of selected element\r\n        e.preventDefault();\r\n\r\n        postNewRoomFromUser(modalRef.current.value)\r\n            .then(res => {\r\n                socket.emit('create-room', currentUser, modalRef.current.value, ({ callback }) => {\r\n                    setRooms([...rooms, res.data.createdRoom])\r\n                });\r\n                handleClose();\r\n            }).catch(err => {\r\n                console.log(\"error with post room\");\r\n            })\r\n    }\r\n\r\n    function handleSwitchRoom(roomId) {\r\n        let r = rooms.find(a => a._id === roomId)\r\n        if (r !== null) {\r\n            getRoomMessages(roomId)\r\n                .then(messages => {\r\n                    // console.log(messages[0].user.user_name)\r\n                    setMessages(messages)\r\n                    setRoom(r);\r\n                })\r\n                .then(() => {\r\n                    // setCurrentRoomname(r.topic);\r\n                    socket.emit('join', currentUser.displayName, r._id, ({ message }) => {\r\n                        console.log(message);\r\n                    });\r\n                })\r\n        }\r\n        // console.log(room.owner[0].user_name)\r\n    }\r\n\r\n    function handleAddUser(e) {\r\n        e.preventDefault();\r\n\r\n        let friend;\r\n\r\n            try{\r\n                friend = friendsList.friends.find(u => u.user_name === modalRef.current.value)\r\n            } catch(err){\r\n                console.log(err.message);\r\n            }\r\n\r\n            if(!friend)\r\n            {\r\n                addFriend(modalRef.current.value)\r\n                .then(res => {\r\n                    // console.log(res);\r\n                        socket.emit('add-friend', currentUser, res.data.recipientUid, ({callback}) => {\r\n                            // console.log(res.data.result.friends)\r\n                            updateFriends();\r\n                        })\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n                    handleClose();\r\n            } else {\r\n                console.log('friend already exists')\r\n            }\r\n    }\r\n\r\n    function handleRemoveFriend(e, uid)\r\n    {\r\n        e.preventDefault();\r\n\r\n        deleteFriend(uid)\r\n        .then((res) => {\r\n            console.log(res);\r\n            socket.emit('remove-friend', currentUser, uid, ({callback}) => {\r\n                setFriends(res.data.result.friends)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function handleRemoveRoom(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const newList = rooms.filter((room) => room._id != currentRoom._id)\r\n        setShowRoomOptions(false);\r\n\r\n        deleteRoom(currentRoom._id)\r\n        .then((res) => {\r\n            socket.emit('remove-room', currentUser, currentRoom._id, ({callback}) => {\r\n\r\n                setRooms(newList)\r\n            })\r\n\r\n            setCurrentRoom();\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function handleLogout() {\r\n\r\n        setError('');\r\n\r\n            logout()\r\n            .then(() => {\r\n                socket.disconnect();\r\n                history.push('/login');\r\n            })\r\n            .catch(err => {\r\n                setError(err);\r\n            })\r\n        }\r\n\r\n\r\n    function handleInviteToRoom(roomId) {\r\n        if (room) {\r\n            axios.post(`${process.env.REACT_APP_MONGO_DB_PORT}/rooms/${roomId}/add-user`, {\r\n                uid: currentFriend.uid\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setShowFriendOptions(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            console.log('You need to be in a room!');\r\n        }\r\n        setCurrentFriend();\r\n    }\r\n\r\n    //similar to componentdidmount\r\n    useEffect(() => {\r\n        socket = io(`${process.env.REACT_APP_MONGO_DB_PORT}`);\r\n\r\n        return () => {\r\n            socket.off();\r\n        }\r\n    }, [`${process.env.REACT_APP_MONGO_DB_PORT}`]);\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on(`welcome`, (messageBody) => {\r\n            console.log(messageBody);\r\n        })\r\n\r\n        socket.on('message-recieved', (result) => {\r\n            console.log(result)\r\n            setMessages(prevMessages => ([...prevMessages, result.message]));\r\n        })\r\n\r\n        socket.on('remove-friend-reponse', (userId, removedId) =>{\r\n            if(currentUser.uid === removedId)\r\n            {\r\n                    console.log('A user removed me as a friend :(')\r\n            }\r\n        })\r\n\r\n    }, []);\r\n\r\n    function handleRightClickFriend(e, friend) {\r\n        //TODO: if user is already in room, do not show 'invite to room on menu'\r\n        e.preventDefault();\r\n\r\n        setCurrentFriend(friend);\r\n        setXPos(e.pageX);\r\n        setYPos(e.pageY);\r\n        setShowFriendOptions(true);\r\n    }\r\n\r\n   function handleRemovePending(id)\r\n   {\r\n    console.log('removed from pending TODO', id)\r\n   }\r\n\r\n   function handleAcceptPending(id)\r\n   {\r\n       console.log(id);\r\n       acceptRequest(id)\r\n       .then(res => {\r\n            socket.emit('accept-request', currentUser, id, ({callback}) => {\r\n                updateFriends();\r\n            })\r\n       })\r\n   }\r\n\r\n    function handleRightClickRoom(e, room) {\r\n        e.preventDefault();\r\n\r\n        setCurrentRoom(room);\r\n        setXPos(e.pageX);\r\n        setYPos(e.pageY);\r\n        setShowRoomOptions(true);\r\n    }\r\n\r\n    function handleEditRoom(e){\r\n        e.preventDefault();\r\n\r\n        console.log('editing room')\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n        setShowFriendOptions(false);\r\n        setShowRoomOptions(false);\r\n    }\r\n\r\n    const renderInviteToolTip = (props) => (\r\n        <Popover id=\"invite-tooltip\" {...props}\r\n            onMouseOut={() => setShowRoomToolTip(false)}>\r\n            <Popover.Content>\r\n                <ListGroup className=\"\">\r\n                    {\r\n                        rooms?\r\n                            rooms.map(room =>\r\n                                <ListGroup.Item action\r\n                                    className=\"list-item-rooms\"\r\n                                    onClick={() => handleInviteToRoom(room._id)}\r\n                                    key={room._id + 'room-invite-choice'}>{room.topic}\r\n                                </ListGroup.Item>) :\r\n                                null\r\n                    }\r\n                </ListGroup>\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n\r\n    return (\r\n        <Container fluid className=\"main\">\r\n            <UserHeader currentUser={currentUser} handleLogout={handleLogout}></UserHeader>\r\n            <Row className=\"main-row\">\r\n\r\n                <LeftPanel\r\n                    handleTabChange={handleTabChange}\r\n                    friendsList={friendsList}\r\n                    handleRightClickFriend={handleRightClickFriend}\r\n                    handleRightClickRoom={handleRightClickRoom}\r\n                    handleRemoveFriend={handleRemoveFriend}\r\n                    handleAcceptPending={handleAcceptPending}\r\n                    rooms={rooms}\r\n                    handleSwitchRoom={handleSwitchRoom}\r\n                    handleShow={handleShow}\r\n                    tab={tab}\r\n                ></LeftPanel>\r\n\r\n                <MiddlePanel\r\n                    room={room}\r\n                    messages={messages}\r\n                    handleSubmit={handleSubmit}\r\n                    formRef={formRef}\r\n                    messageRef={messageRef}\r\n                ></MiddlePanel>\r\n\r\n                <Col lg=\"2\" className=\"members\">\r\n                    <Row className=\"room-details\">\r\n                        <div className=\"details\">{\r\n                            room ?\r\n                                <div>\r\n                                    {/* room info will go here! */}\r\n                                    {room.topic}\r\n                                </div> :\r\n                                <di></di>\r\n                        }</div>\r\n                    </Row>\r\n                    <Row className=\"member-details\">\r\n                        <ListGroup className=\"w-100 list-members\">\r\n                            Members\r\n                            {   \r\n                                room.owner && room.owner[0]?\r\n                                <ListGroup.Item action\r\n                                    className=\"list-item-rooms\"\r\n                                    key={'owner' + `member-list`}>\r\n                                    {room.owner[0].user_name}\r\n                                </ListGroup.Item>:\r\n                                null\r\n                            }\r\n\r\n                            {\r\n                                room.users ?\r\n                                    room.users.map((u, index) =>\r\n                                        <ListGroup.Item action\r\n                                            className=\"list-item-rooms\"\r\n                                            key={index + `member-list`}>\r\n                                            {u.user_name}\r\n                                        </ListGroup.Item>) :\r\n                                    <div></div>\r\n                            }\r\n                        </ListGroup>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                showFriendOptions ?\r\n                    <RightClickFriend\r\n                        xPos={xPos}\r\n                        yPos={yPos}\r\n                        rooms={rooms}\r\n                        handleMouseLeave={handleMouseLeave}\r\n                        setShowRoomToolTip={setShowRoomToolTip}\r\n                        handleInviteToRoom={handleInviteToRoom}\r\n                        renderInviteToolTip={renderInviteToolTip}\r\n                        showRoomToolTip={showRoomToolTip}\r\n                        handleRemoveFriend={handleRemoveFriend}\r\n                    />\r\n                    : null\r\n            }\r\n\r\n            {\r\n                showRoomOptions?\r\n                <RightClickRoom\r\n                        xPos={xPos}\r\n                        yPos={yPos}\r\n                        handleMouseLeave={handleMouseLeave}\r\n                        setShowRoomToolTip={setShowRoomToolTip}\r\n                        handleEditRoom={handleEditRoom}\r\n                        showRoomToolTip={showRoomToolTip}\r\n                        handleRemoveRoom={handleRemoveRoom}\r\n                />\r\n                : null\r\n            }\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    {\r\n                        (tab === 'rooms') ?\r\n                            <Modal.Title>Create new Room</Modal.Title> :\r\n                            <Modal.Title>Add User</Modal.Title>\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Form className=\"text-box\" onSubmit={\r\n                        (tab === 'rooms') ?\r\n                            handleAddRoom :\r\n                            handleAddUser\r\n                    }>\r\n                        <Form.Group id=\"Message\">\r\n                            <Form.Control className=\"w-100 message-field\" type=\"text\" ref={modalRef} />\r\n                        </Form.Group>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {/* <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                        </Button>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={\r\n                        (tab === 'rooms') ?\r\n                            handleAddRoom :\r\n                            handleAddUser\r\n                    }>\r\n                        Save Changes\r\n                        </Button> */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n} from 'react-bootstrap'\r\n\r\nclass UserHeader extends Component {\r\n  render() {\r\n\r\n    const {currentUser, handleLogout} = this.props;\r\n\r\n    return (\r\n      <>\r\n            <Row className=\"top-row\">\r\n                <Col md=\"6\" className=\"user-header-back\">\r\n                    <strong className=\"user-header\">{currentUser.displayName}</strong>\r\n                    <Button variant=\"link\" onClick={handleLogout}>Log out</Button>\r\n                </Col>\r\n            </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserHeader\r\n","import React, { Component } from 'react'\r\nimport { PlusSquare, PersonLinesFill, HouseFill, ChatLeftTextFill, Check, X} from 'react-bootstrap-icons';\r\nimport {\r\n    Tab,\r\n    Tabs,\r\n    ListGroup,\r\n    Row,\r\n    Col,\r\n    Button,\r\n} from 'react-bootstrap'\r\n\r\nclass LeftPanel extends Component {\r\n    render() {\r\n        const {\r\n            handleTabChange,\r\n            friendsList,\r\n            handleRightClickFriend,\r\n            handleRightClickRoom,\r\n            handleRemoveFriend,\r\n            handleAcceptPending,\r\n            rooms,\r\n            handleSwitchRoom,\r\n            handleShow,\r\n            tab,\r\n        } = this.props\r\n        return (\r\n            <>\r\n                <Col xs=\"3\" className=\"contacts debug\">\r\n                    <Row className=\"tab-row\">\r\n                        <Tabs onSelect={handleTabChange} className=\"tab-container\">\r\n                            <Tab eventKey={'home'} title={<span><HouseFill className=\"tab-icon\" /> home</span>} className=\"filled-tab\">\r\n                                {/* home stuff */}\r\n                            </Tab>\r\n                            <Tab eventKey={'people'} title={<span><PersonLinesFill className=\"tab-icon\" /> people</span>} className=\"filled-tab\">\r\n                                <Row className=\"menu\">\r\n                                    <Tab.Container>\r\n                                        <ListGroup className=\"w-100 list-group-menu\">\r\n                                            {\r\n                                                friendsList.friends ?\r\n                                                    friendsList.friends.map(friend =>\r\n                                                        <ListGroup.Item action\r\n                                                            className=\"list-item-rooms\"\r\n                                                            onContextMenu={(e) => handleRightClickFriend(e, friend)}\r\n                                                            key={friend.uid + 'friends'}>\r\n                                                            {/* TODO: add image of person here */}\r\n                                                            {friend.user_name + ', status: ' + friend.status}\r\n                                                        </ListGroup.Item>)\r\n                                                    :\r\n                                                    <div></div>\r\n                                            }\r\n                                        </ListGroup>\r\n\r\n                                        <ListGroup className=\"w-100 list-group-menu\">\r\n                                            <div className=\"friends-divider\">Pending</div>\r\n\r\n                                            {// freind request that have been received\r\n                                                friendsList.received ?\r\n                                                    friendsList.received.map(friend =>\r\n                                                        <ListGroup.Item\r\n                                                            className=\"list-item-rooms\"\r\n                                                            key={friend.uid + 'friends-pending'}>\r\n                                                            {/* TODO: add image of person here */}\r\n                                                            <div>\r\n                                                                <Row>\r\n\r\n                                                                <span className=\"tab-item-name\">{friend.user_name}</span>\r\n                                                                <div className=\"tab-item-buttons\">\r\n                                                                    <Button className=\"tab-item-button\"\r\n                                                                        onClick={() => handleAcceptPending(friend.uid)}\r\n                                                                        variant=\"success\">\r\n                                                                        <Check></Check>\r\n                                                                        </Button>\r\n\r\n                                                                    <Button className=\"tab-item-button\"\r\n                                                                        onClick={(e) => handleRemoveFriend(e, friend.uid)}\r\n                                                                        variant=\"danger\" >\r\n                                                                            <X></X>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </ListGroup.Item>)\r\n                                                    :\r\n                                                    <div></div>\r\n                                            }\r\n\r\n                                            {// freind request that have been sent\r\n                                                friendsList.sent ?\r\n                                                    friendsList.sent.map(friend =>\r\n                                                        <ListGroup.Item\r\n                                                            className=\"list-item-rooms\"\r\n                                                            key={friend.uid + 'friends-pending'}>\r\n                                                            {/* TODO: add image of person here */}\r\n                                                            <div>\r\n                                                                <Row>\r\n                                                                <span className=\"tab-item-name\">{friend.user_name}</span>\r\n                                                                <div className=\"tab-item-buttons\">\r\n                                                                    <Button className=\"tab-item-button\"\r\n                                                                        onClick={(e) => handleRemoveFriend(e, friend.uid)}\r\n                                                                        variant=\"danger\" >\r\n                                                                        <X></X>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </ListGroup.Item>)\r\n                                                    :\r\n                                                    <div></div>\r\n                                            }\r\n                                        </ListGroup>\r\n                                    </Tab.Container>\r\n                                </Row>\r\n                            </Tab>\r\n                            <Tab eventKey={'rooms'} title={<span><ChatLeftTextFill className=\"tab-icon\" /> rooms</span>} className=\"filled-tab\">\r\n                                <Row className=\"menu\">\r\n                                    <Tab.Container>\r\n                                        <ListGroup className=\"w-100 list-group-menu\">\r\n                                            {\r\n                                                rooms ?\r\n                                                    rooms.map(room =>\r\n                                                        <ListGroup.Item action\r\n                                                            className=\"list-item-rooms\"\r\n                                                            onClick={() => handleSwitchRoom(room._id)}\r\n                                                            onContextMenu={(e) => handleRightClickRoom(e, room)}\r\n                                                            key={room._id + 'rooms'}>{room.topic}\r\n                                                        </ListGroup.Item>) :\r\n                                                    <div></div>\r\n                                            }\r\n                                        </ListGroup>\r\n                                    </Tab.Container>\r\n                                </Row>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Row>\r\n\r\n\r\n                    <Row className=\"add-item\">\r\n                        <Col className=\"add-item\">\r\n                            {\r\n                                (tab === 'rooms' || tab === 'people') ?\r\n                                    <Button onClick={handleShow} className=\"add-room-btn\">\r\n                                        <PlusSquare />\r\n                                    </Button> :\r\n                                    <div></div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftPanel\r\n","import React, { Component } from 'react'\r\nimport {\r\n    ListGroup,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Card,\r\n    ListGroupItem,\r\n} from 'react-bootstrap'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nclass MiddlePanel extends Component {\r\n  render() {\r\n      const {room, messages, handleSubmit, formRef, messageRef} = this.props\r\n    return (\r\n      <>\r\n                <Col className=\"chat debug\">\r\n                    <Row>\r\n                        <Col className=\"line\"></Col>\r\n                        <Card className=\"chat-info\">\r\n                            <Card.Body>\r\n                                <h1 className=\"small-font\">\r\n                                    {room.topic}\r\n                                </h1>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Col className=\"line\"></Col>\r\n                    </Row>\r\n                    <Row className=\"messages\">\r\n                        {/* scroll to bottom will be fixed soon i guess, it will debug in console */}\r\n                        <ScrollToBottom className=\"w-100\" debug={false}>\r\n                            <ListGroup className=\"w-100\">\r\n                                {\r\n                                    messages ?\r\n                                        messages.map((message, index) =>\r\n                                            <ListGroupItem header=\"yo\" className=\"w-100 message\" key={index + 'message'}>\r\n                                                <div className=\"message-author\">{message.user.user_name}</div>\r\n                                                <p>{message.message_body}</p>\r\n                                            </ListGroupItem>) :\r\n                                        <div>...</div>\r\n                                }\r\n                            </ListGroup>\r\n                        </ScrollToBottom>\r\n                    </Row>\r\n\r\n                    <Row className=\"text-field-row\">\r\n                        <Form ref={formRef} onSubmit={handleSubmit} className=\"text-box\">\r\n                            <Form.Row>\r\n                                <Col className=\"form-text-field\">\r\n                                    <Form.Group id=\"Message\">\r\n                                        <Form.Control className=\"w-100 message-field\" type=\"text\" ref={messageRef} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xs='1' className=\"form-button-submit\">\r\n                                    <Button className=\"w-100\" type=\"submit\">Send</Button>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Row>\r\n                </Col>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MiddlePanel\r\n","import React, { Component } from 'react'\r\nimport {\r\n    ListGroup,\r\n    OverlayTrigger,\r\n} from 'react-bootstrap'\r\n\r\nclass RightClickFriend extends Component {\r\n  render() {\r\n\r\n      const {\r\n        xPos,\r\n        yPos,\r\n        rooms,\r\n        handleMouseLeave,\r\n        handleInviteToRoom,\r\n        setShowRoomToolTip,\r\n        renderInviteToolTip,\r\n        showRoomToolTip,\r\n        handleRemoveFriend,\r\n      } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <ListGroup style={\r\n            {\r\n                top: `${yPos - 10}px`,\r\n                left: `${xPos - 10}px`,\r\n                position: 'absolute',\r\n                zIndex: '100',\r\n                paddingRight: 40,\r\n            }}\r\n            onMouseLeave={handleMouseLeave}>\r\n            <div\r\n                onMouseOver={() => {\r\n                  if(rooms[0])\r\n                  setShowRoomToolTip(true)\r\n                }}\r\n                onMouseOut={() => setShowRoomToolTip(false)}\r\n            >\r\n                <OverlayTrigger\r\n                    placement=\"right-start\"\r\n                    delay={{ show: 350, hide: 200 }}\r\n                    overlay={renderInviteToolTip}\r\n                    show={showRoomToolTip}\r\n                >\r\n                    <ListGroup.Item action className=\"list-item-rooms-context\" onClick={handleInviteToRoom}>\r\n                        add to room\r\n                </ListGroup.Item>\r\n                </OverlayTrigger>\r\n            </div>\r\n            <ListGroup.Item action className=\"list-item-rooms-context\" onClick={handleRemoveFriend}>\r\n                remove friend\r\n        </ListGroup.Item>\r\n        </ListGroup> \r\n</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RightClickFriend\r\n\r\n","import React, { Component } from 'react' //TODO: working on this\r\nimport {\r\n    ListGroup,\r\n    OverlayTrigger,\r\n} from 'react-bootstrap'\r\n\r\nclass RightClickRoom extends Component {\r\n    render() {\r\n\r\n        const {\r\n            xPos,\r\n            yPos,\r\n            handleEditRoom,\r\n            handleMouseLeave,\r\n            setShowRoomToolTip,\r\n            handleRemoveRoom,\r\n        } = this.props;\r\n\r\n        return (\r\n            <ListGroup style={\r\n                {\r\n                    top: `${yPos - 10}px`,\r\n                    left: `${xPos - 10}px`,\r\n                    position: 'absolute',\r\n                    zIndex: '100',\r\n                    paddingRight: 40,\r\n                }}\r\n                onMouseLeave={handleMouseLeave}>\r\n                <div\r\n                    onMouseOver={() => setShowRoomToolTip(true)}\r\n                    onMouseOut={() => setShowRoomToolTip(false)}\r\n                >\r\n                <ListGroup.Item action className=\"list-item-rooms-context\" onClick={(e) => handleEditRoom(e)}>\r\n                        edit room\r\n                </ListGroup.Item>\r\n                </div>\r\n                <ListGroup.Item action className=\"list-item-rooms-context\" onClick={handleRemoveRoom}>\r\n                    delete room\r\n        </ListGroup.Item>\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RightClickRoom\r\n","import React, {useRef, useState} from 'react';\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useAuth, AuthProvider} from '../../contexts/AuthContext'\r\n\r\nconst Login = () => {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const {login} = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n            \r\n        try{\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n            } catch {\r\n            setError(\"Failed to Log In\");\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <AuthProvider>\r\n\r\n        <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{maxWidth: '400px'}}>\r\n\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Log In</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\r\n                </Form>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n        </div>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Need an Account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n            </div>\r\n        </Container>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useRef, useState} from 'react';\r\nimport {Form, Button, Card, Container, Alert} from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useAuth, AuthProvider} from '../../contexts/AuthContext'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const emailRef = useRef();\r\n    const {resetPassword} = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n            \r\n        try{\r\n            setMessage(\"\");\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage('Check your inbox for further instructions')\r\n            } catch {\r\n            setError(\"Failed to reset password\");\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <AuthProvider>\r\n\r\n        <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{maxWidth: '400px'}}>\r\n\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" \r\n                    type=\"submit\">Reset Password</Button>\r\n                </Form>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Need an Account? <Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n            </div>\r\n        </Container>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\n\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport Signup from './components/Signup/Signup'\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute'\r\nimport Chat from './components/Chat/Chat'\r\nimport Login from './components/Login/Login'\r\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword'\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport {RequestProvider } from './contexts/HttpRequestContext';\r\n//import { Switch } from 'react-router-dom';\r\n\r\nconst App = () => (\r\n    <AuthProvider>\r\n        <RequestProvider>\r\n        <Router>\r\n            <PrivateRoute path=\"/\" exact component = {Chat} />\r\n            <Route path=\"/login\" component = {Login} />\r\n            <Route path=\"/signup\" component = {Signup} />\r\n            <Route path=\"/forgot-password\" component = {ForgotPassword} />\r\n        </Router>\r\n        </RequestProvider>\r\n    </AuthProvider>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}